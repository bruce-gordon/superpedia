{"version":3,"sources":["components/Navbar/Navbar.js","components/Search/Search.js","icons/icons.js","components/Result/Result.js","components/ResultView/ResultView.js","components/Saved/Saved.js","components/SavedView/SavedView.js","components/Character/Character.js","utilities/apiCalls.js","components/About/About.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","exact","activeClassName","Search","getCharacter","useState","charName","setCharName","clearInput","htmlFor","type","name","id","placeholder","value","onChange","event","target","onClick","info","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","plus","Result","images","aliases","deck","realName","publisher","findCharacter","siteUrl","updateSavedById","saved","isSaved","setIsSaved","useEffect","checkSaved","check","find","char","getRealName","data-testid","handleClick","alt","src","original_url","ResultView","searchResults","results","map","result","image","real_name","site_detail_url","length","Saved","SavedView","savedChars","Character","details","updateSaved","charData","setCharData","fetch","then","resp","json","getCharacterById","data","JSON","parse","localStorage","getItem","parseInt","split","join","href","rel","About","App","allCharData","setAllCharData","character","setCharacter","setSaved","error","setError","getLocalStorage","a","storedChars","getData","catch","message","console","log","match","remaining","filter","setItem","stringify","updateSavedByChar","path","render","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","router","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f7e100ce.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Navbar.scss';\n\nconst Navbar = () => {\n  return (\n    <nav className='nav-bar'>\n      <h1 className='nav-title'>Superpedia!\n      </h1>\n      <h3 className='nav-sub-title'> Your guide for all things super\n      </h3>\n      <div className='nav-button-container'>\n        <NavLink\n          to='/'\n          className='nav-link'\n          exact activeClassName={'selected-link'}\n        >New Search\n        </NavLink>\n        <NavLink\n          to='/saved'\n          className='nav-link'\n          exact activeClassName={'selected-link'}\n        >Saved Supers\n        </NavLink>\n        <NavLink\n          to='/about'\n          className='nav-link'\n          exact activeClassName={'selected-link'}\n        >About\n        </NavLink>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Search.scss';\n\nconst Search = ({ getCharacter }) => {\n  const [charName, setCharName] = useState('');\n\n  const handleChange = (event) => {\n    setCharName(event.target.value);\n  }\n\n  const handleClick = (event) => {\n    getCharacter(charName);\n    clearInput();\n  }\n\n  const clearInput = () => {\n    setCharName('');\n  }\n\n  const disableLink = () => {\n    let isDisabled = charName ? 'submit-search-link' : 'disabled-link';\n    return isDisabled\n  }\n\n  return (\n    <section className='search-view'>\n      <h1 className='view-header'>Search for Supers\n      </h1>\n      <h3 className='view-subheader'> Information about your favorite comic book characters is at your fingertips\n      </h3>\n      <form className='search-area'>\n        <label\n          className='search-instructions' htmlFor='search'>Enter the name of a superhero, supervillain, or comic character to get started.\n        </label>\n        <input\n          type='text'\n          name='search'\n          id='search'\n          placeholder='Character name...'\n          className='search-input'\n          value={ charName }\n          onChange={ handleChange }>\n        </input>\n        <Link\n          to='/results'\n          className={ disableLink() }\n          onClick={ handleClick }\n          >Search\n\n        </Link>\n      </form>\n    </section>\n  )\n}\n\nexport default Search;\n","export const thumb =\n<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"thumbs-up\" className=\"icon svg-inline--fa fa-thumbs-up fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M466.27 286.69C475.04 271.84 480 256 480 236.85c0-44.015-37.218-85.58-85.82-85.58H357.7c4.92-12.81 8.85-28.13 8.85-46.54C366.55 31.936 328.86 0 271.28 0c-61.607 0-58.093 94.933-71.76 108.6-22.747 22.747-49.615 66.447-68.76 83.4H32c-17.673 0-32 14.327-32 32v240c0 17.673 14.327 32 32 32h64c14.893 0 27.408-10.174 30.978-23.95 44.509 1.001 75.06 39.94 177.802 39.94 7.22 0 15.22.01 22.22.01 77.117 0 111.986-39.423 112.94-95.33 13.319-18.425 20.299-43.122 17.34-66.99 9.854-18.452 13.664-40.343 8.99-62.99zm-61.75 53.83c12.56 21.13 1.26 49.41-13.94 57.57 7.7 48.78-17.608 65.9-53.12 65.9h-37.82c-71.639 0-118.029-37.82-171.64-37.82V240h10.92c28.36 0 67.98-70.89 94.54-97.46 28.36-28.36 18.91-75.63 37.82-94.54 47.27 0 47.27 32.98 47.27 56.73 0 39.17-28.36 56.72-28.36 94.54h103.99c21.11 0 37.73 18.91 37.82 37.82.09 18.9-12.82 37.81-22.27 37.81 13.489 14.555 16.371 45.236-5.21 65.62zM88 432c0 13.255-10.745 24-24 24s-24-10.745-24-24 10.745-24 24-24 24 10.745 24 24z\"></path></svg>\n\nexport const info =\n<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"info-circle\" className=\"icon svg-inline--fa fa-info-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z\"></path></svg>\n\nexport const plus =\n<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"plus-circle\" className=\"icon svg-inline--fa fa-plus-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"></path></svg>\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { info, plus } from '../../icons/icons.js';\nimport './Result.scss';\n\nconst Result = ({ id, aliases, deck, images, name, publisher, realName, siteUrl, findCharacter, updateSavedById, saved }) => {\n  const [isSaved, setIsSaved] = useState(false);\n\n  useEffect(() => {\n    checkSaved();\n  }, []);\n\n  const getRealName = (realName) => {\n    return realName ? realName : 'Real name unknown';\n  }\n\n  const goToCharacter = () => {\n    findCharacter(id);\n  }\n\n  const handleClick = (id) => {\n    if (!isSaved) {\n      updateSavedById(id);\n      setIsSaved(true);\n    } else {\n      updateSavedById(id);\n      setIsSaved(false);\n    }\n  }\n\n  const checkSaved = () => {\n    const check = saved.find(char => char.id === id);\n    (check) ? setIsSaved(true) : setIsSaved(false);\n  }\n\n  const getStyling = () => {\n    return (isSaved) ? 'button-link-saved' : 'button-link';\n  }\n\n  return (\n    <section className='result-card'>\n      <div className='top-half'>\n        <div className='name-div'>\n          <h4 className='char-name'>{ name }\n          </h4>\n          <p className='real-name'><i>{ getRealName(realName) }</i></p>\n        </div>\n        <div className='button-div'>\n          <Link\n            to={`/character/${id}`}\n            className='button-link'\n            data-testid='i-button'\n            onClick={ goToCharacter }>{ info }\n          </Link>\n          <p\n            data-testid='save-test'\n            className={ getStyling() }\n            onClick={ () => handleClick(id) }\n          >{ plus }\n          </p>\n        </div>\n      </div>\n      <div className='image-div'>\n        <img\n          className='image'\n          alt={`${name}`}\n          src={images.original_url}>\n        </img>\n      </div>\n    </section>\n  )\n}\n\nexport default Result;\n","import React from 'react';\nimport './ResultView.scss';\nimport Result from '../Result/Result.js';\n\nconst ResultView = ({ searchResults, findCharacter, updateSavedById, saved }) => {\n  const results = searchResults.map(result => {\n    return (\n      <Result\n        key={ result.id }\n        id={ result.id }\n        aliases={ result.aliases }\n        deck={ result.deck }\n        images={ result.image }\n        name={ result.name }\n        publisher={ result.publisher }\n        realName={ result.real_name }\n        siteUrl={ result.site_detail_url }\n        findCharacter={ findCharacter }\n        updateSavedById={ updateSavedById }\n        saved={ saved }\n      />\n    )\n  })\n\n  return (\n    <section\n      className='result-view'>\n      <h1 className='view-header'>Search Results\n      </h1>\n      { searchResults.length > 0 &&\n        <div className='result-container'>\n          { results }\n        </div>\n      }\n      {\n        <h3 className='loading'>\n          Please wait, your results are loading...<br/> or click \"New Search\" to try again.\n        </h3>\n      }\n    </section>\n  )\n}\n\nexport default ResultView;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { info, plus } from '../../icons/icons.js';\nimport './Saved.scss';\n\nconst Saved = ({ id, aliases, deck, images, name, publisher, realName, siteUrl, findCharacter, updateSavedById }) => {\n\n  const getRealName = (realName) => {\n    return realName ? realName : 'Real name unknown';\n  }\n\n  const goToCharacter = () => {\n    findCharacter(id);\n  }\n\n  return (\n    <section className='result-card'>\n      <div className='top-half'>\n        <div className='name-div'>\n          <h4 className='char-name'>{ name }\n          </h4>\n          <p className='real-name'><i>{ getRealName(realName) }</i></p>\n        </div>\n        <div className='button-div'>\n          <Link\n            to={`/character/${id}`}\n            data-testid={`i-btn-link${id}`}\n            name={`${id}-link`}\n            className='button-link'\n            onClick={ goToCharacter }>{ info }\n          </Link>\n          <p\n            data-testid='save-btn'\n            className='button-link-save'\n            onClick={ () => updateSavedById(id) }\n          >{ plus }\n          </p>\n        </div>\n      </div>\n      <div className='image-div'>\n        <img\n          className='image'\n          alt={`${name}`}\n          src={images.original_url}>\n        </img>\n      </div>\n    </section>\n  )\n}\n\nexport default Saved;\n","import React  from 'react';\nimport './SavedView.scss';\nimport Saved from '../Saved/Saved.js';\n\n\nconst SavedView = ({ saved, findCharacter, updateSavedById }) => {\n\n  const savedChars = saved.map(char => {\n    return (\n      <Saved\n        key={ `${char.id}2` }\n        id={ char.id }\n        aliases={ char.aliases }\n        deck={ char.deck }\n        images={ char.image }\n        name={ char.name }\n        publisher={ char.publisher }\n        realName={ char.real_name }\n        siteUrl={ char.site_detail_url }\n        findCharacter={ findCharacter }\n        updateSavedById={ updateSavedById }\n      />\n    )\n  })\n\n  return (\n    <section\n      className='saved-view'>\n      <h1\n        data-testid='saved-view-header'\n        className='view-header'>Saved Supers\n      </h1>\n      <div className='saved-container'>\n      { savedChars }\n      </div>\n    </section>\n  )\n}\n\nexport default SavedView;\n","import React, { useState, useEffect } from 'react';\nimport './Character.scss';\nimport { plus } from '../../icons/icons.js';\nimport { getCharacterById } from '../../utilities/apiCalls.js';\n\nconst Character = ({ id, details, updateSaved, saved }) => {\n  const [charData, setCharData] = useState(details);\n  const [isSaved, setIsSaved] = useState(false);\n\n  useEffect(() => {\n    getCharacterById(id)\n    .then((data) => { setCharData(data.results) })\n    .then(() => checkSaved())\n  }, [])\n\n\n  const formatAliases = () => {\n    return charData ? charData.aliases.split('\\r\\n').join(', ') : '';\n  }\n\n  const handleClick = (charData) => {\n    if (!isSaved) {\n      updateSaved(charData);\n      setIsSaved(true);\n    } else {\n      updateSaved(charData);\n      setIsSaved(false);\n    }\n  }\n\n  const checkSaved = () => {\n    const storedChars = JSON.parse(localStorage.getItem('savedChars'));\n    const check = storedChars.find(char => char.id === parseInt(id));\n    (check) ? setIsSaved(true) : setIsSaved(false);\n  }\n\n  const getStyling = () => {\n    return (isSaved) ? 'saved-plus-container' : 'plus-container';\n  }\n\n  return (\n    <section className='character-view'>\n      {!charData &&\n        <h1 className='view-header'>Loading character data --  Please wait or click New Search to try again\n        </h1>}\n      {charData &&\n        <div className='character-area'>\n          <h1 className='view-header-char'>{ charData.name }\n          </h1>\n          <article className='char-bio-area'>\n            <div className='image-div-char'>\n              <img\n                className='image-char'\n                alt={`${charData.name}`}\n                src={charData.image.original_url}>\n              </img>\n            </div>\n            <div className='char-info'>\n              <p><b>Real name:</b> { charData.real_name }</p>\n              <p><b>Aliases:</b> { formatAliases() }</p>\n              <p><b>Publisher:</b> { charData.publisher.name }</p>\n              <p>{ charData.deck }</p>\n              <div className='link-container'>\n                <a\n                  href={ charData.site_detail_url }\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  className='link-text'>\n                  <p className='link-to-info'>\n                    More information...\n                  </p>\n                </a>\n              </div>\n              <div\n                data-testid='save-btn'\n                className={ getStyling() }\n                onClick={ () => handleClick(charData)}>\n              { plus }\n              </div>\n            </div>\n          </article>\n        </div>\n      }\n      </section>\n  )\n }\n\nexport default Character;\n","export const getData = (name) => {\n  const proxyUrl = 'https://pure-hollows-05817.herokuapp.com/'\n  return fetch(`${proxyUrl}https://comicvine.gamespot.com/api/characters/?api_key=b75f5fe05e82c4de9fe0cb4d38ed1e69083b81af&filter=name:${name}&field_list=aliases,deck,id,image,name,publisher,real_name,site_detail_url&limit=10&format=json`)\n  .then(resp => resp.json())\n}\n\nexport const getCharacterById = (id) => {\n  const proxyUrl = 'https://pure-hollows-05817.herokuapp.com/'\n  return fetch(`${proxyUrl}https://comicvine.gamespot.com/api/character/4005-${id}/?api_key=b75f5fe05e82c4de9fe0cb4d38ed1e69083b81af&field_list=aliases,deck,id,image,name,publisher,real_name,site_detail_url&format=json`)\n  .then(resp => resp.json())\n}\n","import React from 'react';\nimport './About.scss';\n\nconst About = () => {\n  return (\n    <section\n      className='about-view'>\n      <h1\n        className='view-header'>About Superpedia\n      </h1>\n      <article className='about-container'>\n        <h3 className='welcome'>Welcome to Superpedia!</h3>\n        <p className='about-text'>\n          This site is the perfect place for long-time comic lovers, new fans, or anyone looking for information on all the 2-D heroes and villains you can think of.  Search for any character by name, click the <b>i</b> icon to see more details, and add any character you like to your Saved Supers by clicking the <b>+</b> icon.  This app uses the ComicVine api, and you can visit ComicVine by clicking \"more information\" while looking at any character.  Enjoy!\n        </p>\n      </article>\n    </section>\n  )\n}\n\nexport default About;\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Navbar from '../Navbar/Navbar.js';\nimport Search from '../Search/Search.js';\nimport ResultView from '../ResultView/ResultView.js';\nimport SavedView from '../SavedView/SavedView.js';\nimport Character from '../Character/Character.js';\nimport About from '../About/About.js';\nimport { getData } from '../../utilities/apiCalls.js';\nimport './App.scss';\n\nconst App = () => {\n  const [allCharData, setAllCharData] = useState([]);\n  const [character, setCharacter] = useState('');\n  const [saved, setSaved] = useState([]);\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    setAllCharData([]);\n    getLocalStorage()\n  }, [])\n\n  const getLocalStorage = async () => {\n    const storedChars = JSON.parse(localStorage.getItem('savedChars'));\n    if (storedChars !== null) {\n      await setSaved(storedChars);\n    }\n  }\n\n  const getCharacter = (name) => {\n    getData(name)\n    .then((data) => setAllCharData(data.results))\n    .catch(error => setError(error.message))\n    .then(() => console.log(error))\n  }\n\n  const findCharacter = (id) => {\n    const match = allCharData.find(char => char.id === id);\n    setCharacter(match);\n  }\n\n  const updateSavedById = (id) => {\n    const savedChar = saved.find(char => char.id === id);\n    if (savedChar) {\n      const remaining = saved.filter(char => char.id !== id);\n      setSaved(remaining);\n      localStorage.setItem('savedChars', JSON.stringify(remaining));\n    } else {\n      const match = allCharData.find(char => char.id === id);\n      setSaved([...saved, match]);\n      localStorage.setItem('savedChars', JSON.stringify([...saved, match]));\n    }\n  }\n\n  const updateSavedByChar = (character) => {\n    const savedChar = saved.find(char => char.id === parseInt(character.id));\n    if (savedChar) {\n      const remaining = saved.filter(char => char.id !== parseInt(character.id));\n      setSaved(remaining);\n      localStorage.setItem('savedChars', JSON.stringify(remaining))\n    } else {\n      setSaved([...saved, character]);\n      localStorage.setItem('savedChars', JSON.stringify([...saved, character]));\n    }\n  }\n\n  return (\n    <div className='App'>\n      <Navbar />\n      <main>\n        <header\n          data-testid='app-header'\n          className='App-header'>\n        </header>\n        <Switch>\n          <Route\n            exact path='/about'\n            render={() => {\n              return (\n                <About />\n              )}\n            }>\n          </Route>\n          <Route\n            exact path='/saved'\n            render={() => {\n              return (\n                <SavedView\n                  saved={ saved }\n                  findCharacter={ findCharacter }\n                  updateSavedById={ updateSavedById }\n                />)}\n            }>\n          </Route>\n          <Route\n            exact path={'/character/:id'}\n            render={({match}) => {\n              return (\n                <Character\n                  key={ `${match.params.id}1` }\n                  id={ `${match.params.id}` }\n                  details={ character }\n                  updateSaved={ updateSavedByChar }\n                  saved={ saved }\n                />)}\n            }>\n          </Route>\n          <Route\n            exact path='/results'\n            render={() => {\n              return (\n                <ResultView\n                  saved={ saved }\n                  searchResults={ allCharData }\n                  findCharacter={ findCharacter }\n                  updateSavedById={ updateSavedById }\n                />)}\n            }>\n          </Route>\n          <Route\n            exact path='/'\n            render={() => {\n              return (\n                <Search\n                  getCharacter={ getCharacter }\n                />)}\n            }>\n          </Route>\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nconst router = <BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>\n\nReactDOM.render(\n  router,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}